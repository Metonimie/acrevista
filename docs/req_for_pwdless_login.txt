

REVIEW TOKEN
============

Model
- Has an user
- Has expiration date
- Has the generated token.


- How do we generate token?
- We need a new view which should take a token
  - if token is valid, user should be logged on, no pass required and assigned as a reviewer.
  - if token is invalid, user should be prompted to create an account, then assigned as a reviewer automatically.
  - editor should be notified if someone accepts or rejects

- When we send the invitatation email.
- The user can accept or reject the reviewing request. If the user rejects, the token is invalidated and editor notified.

Q:
-> What happens if a user has more than one token?
A: Older token gets deleted and a new one is generated.

-> How can we delete tokens that are already expired?


-> How can we improve the email notifications?
A: No answer currently. Probably some lib...

-> How can we generate the token securely?

// Taken from the screts.py code.
import base64
import os

base64.urlsafe_b64encode( os.urandom( 32 ) ).rstrip(b'=').decode('ascii')

-> In which package does the LoginToken class gets implemented, in account or journal? 
It's part of the account but journal has use of it.
A: Clearly account.

===================== Testing the implementation.. (postponed)

ReviewRequest in journal.
=========================

Make Invite model in account, should be able to redirect to an url if the invite was accepted.
The url should be obtained from the paper class (for our purpose). If the user has no account,
an account should be created for him if he accepts the invitation, after the account is created.
He should be assigned as a reviewer for the selected paper.

If the user refuses the invitation, the guy who invited it should be notified that the user didn't accept.

The interface should be in the view.
The view should be updated to use Vue.JS after the backend is functional.